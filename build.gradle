tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}
group = 'io.dekstroza'
version = '1.0.0-SNAPSHOT'

description = "Mongonaut Service"


apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'io.spring.dependency-management'

import com.bmuschko.gradle.docker.tasks.image.*


task dockerImg(type: DockerBuildImage) {
    inputDir = projectDir
    tags.add('dekstroza/mongonaut:1.0.0-SNAPSHOT')
    buildArgs = ['BUILD_DIR': 'build/libs','JAR_FILE': project.name+'-'+project.version+'.jar']
    dependsOn build
}
shadowJar {
    mergeServiceFiles()
}

repositories {
     maven { url "https://jcenter.bintray.com" }
     maven { url "http://repo.maven.apache.org/maven2" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.2.2'
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    annotationProcessor "io.micronaut:micronaut-graal"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    compile group: 'io.micronaut', name: 'micronaut-http-client'
    compile group: 'io.micronaut', name: 'micronaut-http-server-netty'
    compile group: 'io.micronaut.configuration', name: 'micronaut-mongo-reactive'
    compile group: 'io.micronaut', name: 'micronaut-inject'
    compile group: 'io.micronaut', name: 'micronaut-validation'
    compile group: 'io.micronaut', name: 'micronaut-runtime'
    compile group: 'io.micronaut.configuration', name: 'micronaut-micrometer-core'
    compile group: 'io.micronaut', name: 'micronaut-management'
    compile group: 'io.micronaut.configuration', name: 'micronaut-micrometer-registry-prometheus'
    compile group: 'io.swagger.core.v3', name: 'swagger-annotations'
    compile group: 'io.micronaut', name: 'micronaut-tracing'
    compile group: 'io.jaegertracing', name: 'jaeger-thrift', version: '1.0.0'
    runtime group: 'ch.qos.logback', name: 'logback-classic', version:'1.2.3'
    runtime group: 'io.micronaut', name: 'micronaut-graal'
    compileOnly group: 'org.graalvm.sdk', name: 'graal-sdk', version: '19.2.0'
    compileOnly group: 'com.oracle.substratevm', name: 'svm', version: '19.2.0'
    compileOnly group: 'io.micronaut', name: 'micronaut-inject-java'
    testRuntimeOnly group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.2.0'
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

}
buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:4.7.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.15'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')
mainClassName = 'io.dekstroza.Application'
compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'

